{"version":3,"sources":["components/Cards/index.js","components/Wrapper/index.js","components/Counter/index.js","App.js","index.js"],"names":["cards","props","className","alt","name","src","image","id","onClick","shuffleScoreCard","wrapper","children","counter","total","status","App","state","crystals","clickedCrystalIds","score","goal","includes","setState","push","length","console","log","i","j","Math","floor","random","Counter","this","Wrapper","map","crystal","Cards","key","Component","ReactDOM","render","document","getElementById"],"mappings":"o9CAaeA,G,MAPD,SAAAC,GAAK,OACjB,yBAAKC,UAAU,4BACX,yBAAKC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,MAAOC,GAAIN,EAAMM,GAChDC,QAAS,kBAAMP,EAAMQ,iBAAiBR,EAAMM,KAAKL,UAAU,oBCFpDQ,G,MAFC,SAAAT,GAAK,OAAI,yBAAKC,UAAU,WAAWD,EAAMU,YCQ1CC,G,MAPC,SAAAX,GAAK,OACnB,yBAAKC,UAAU,aACb,wBAAIA,UAAU,SAAd,eAAmCD,EAAMY,OACzC,wBAAIX,UAAU,UAAUD,EAAMa,W,OC2DnBC,G,iNA3DbC,MAAQ,CACNC,WACAC,kBAAmB,GACnBC,MAAO,EACPC,KAAM,EACNN,OAAQ,I,EAIVL,iBAAmB,SAAAF,GACjB,IAAIW,EAAoB,EAAKF,MAAME,kBAEnC,GAAGA,EAAkBG,SAASd,GAC5B,EAAKe,SAAS,CAAEJ,kBAAmB,GAAIC,MAAO,EAAGL,OAAS,wCAD5D,CAME,GAFAI,EAAkBK,KAAKhB,GAES,IAA7BW,EAAkBM,OAGnB,OAFA,EAAKF,SAAS,CAACH,MAAO,EAAGL,OAAQ,gCAAiCI,kBAAmB,UACrFO,QAAQC,IAAI,WAId,EAAKJ,SAAS,CAAEL,WAAUC,oBAAmBC,MAAOD,EAAkBM,OAAQV,OAAQ,MAEtF,IAAK,IAAIa,EAAIV,EAASO,OAAS,EAAGG,EAAI,EAAGA,IAAK,CAC5C,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADI,EAEf,CAACV,EAASW,GAAIX,EAASU,IAAnDV,EAASU,GAFkC,KAE9BV,EAASW,GAFqB,Q,wEAQxC,IAAD,OACP,OACE,yBAAK1B,UAAU,OACb,4BAAQA,UAAU,cAChB,wBAAIA,UAAU,aAAd,wBAEF,kBAAC8B,EAAD,CAASnB,MAAOoB,KAAKjB,MAAMG,MACpBC,KAAM,EACNN,OAAQmB,KAAKjB,MAAMF,SAE1B,kBAACoB,EAAD,KACGD,KAAKjB,MAAMC,SAASkB,KAAI,SAAAC,GAAO,OAC9B,kBAACC,EAAD,CACE5B,iBAAkB,EAAKA,iBACvBF,GAAI6B,EAAQ7B,GACZ+B,IAAKF,EAAQ7B,GACbD,MAAO8B,EAAQ9B,iB,GApDXiC,c,MCAlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a966b577.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport \"./cards.css\";\n\n//this component is only rendering the images to the screen and can be a simple render function it is a\n//stateless component\nconst cards = props => (\n  <div className=\"card img-container hover\">\n      <img alt={props.name} src={props.image} id={props.id}\n        onClick={() => props.shuffleScoreCard(props.id)} className='shuffleScore'/>\n  </div>\n);\n\nexport default cards;","  \nimport React from \"react\";\nimport \"./wrapper.css\";\n\n\nconst wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default wrapper;","  \nimport React from \"react\";\nimport \"./counter.css\";\n// import Arrow from 'react-icons/lib/fa/caret-right';\n\n//stateless component\nconst counter = props => (\n  <div className=\"gameScore\">\n    <h3 className=\"score\">Your Score  {props.total}</h3>\n    <h3 className=\"status\">{props.status}</h3>\n  </div>\n);\n\nexport default counter;\n\n{/* <Arrow /> */}","import React, { Component } from \"react\";\nimport Cards from \"./components/Cards\";\nimport Wrapper from \"./components/Wrapper\";\nimport Counter from \"./components/Counter\";\nimport crystals from \"./Cards.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // Setting this.state.crystals to the cards json array\n  state = {\n    crystals,\n    clickedCrystalIds: [],\n    score: 0,\n    goal: 8,\n    status: \"\"\n  };\n\n\n  shuffleScoreCard = id => {\n    let clickedCrystalIds = this.state.clickedCrystalIds;\n\n    if(clickedCrystalIds.includes(id)){\n      this.setState({ clickedCrystalIds: [], score: 0, status:  \"Game Over! Click to play again!\" });\n      return;\n    }else{\n      clickedCrystalIds.push(id)\n\n      if(clickedCrystalIds.length === 8){\n        this.setState({score: 8, status: \"You Won! Click to play again!\", clickedCrystalIds: []});\n        console.log('You Win');\n        return;\n      }\n\n      this.setState({ crystals, clickedCrystalIds, score: clickedCrystalIds.length, status: \" \" });\n\n      for (let i = crystals.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [crystals[i], crystals[j]] = [crystals[j], crystals[i]];\n      }\n    }\n  }\n\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Clicky Crystal Game</h1>\n        </header>\n        <Counter total={this.state.score}\n               goal={8}\n               status={this.state.status}\n               />\n        <Wrapper>\n          {this.state.crystals.map(crystal => (\n            <Cards\n              shuffleScoreCard={this.shuffleScoreCard}\n              id={crystal.id}\n              key={crystal.id}\n              image={crystal.image}\n            />\n          ))}\n        </Wrapper>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","  \nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n// import serviceWorker from '../src/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// serviceWorker();"],"sourceRoot":""}